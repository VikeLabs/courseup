name: Continuous Integration (Frontend)
on:
  pull_request:
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress
      - name: Lint
        run: npm run lint
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress
      - name: Test
        run: npm test
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          key: npm-${{ hashFiles('package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress
      - name: Add version
        run: echo ${{ github.sha }} > public/version
      - name: Build
        env:
          REACT_APP_SENTRY_RELEASE: ${{ github.sha }}
        run: npm run build
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v2
        with:
          name: create-react-app-build
          path: build
  deploy-preview:
    name: Deploy to Firebase Hosting Preview
    if: '!github.event.pull_request.head.repo.fork'
    runs-on: ubuntu-latest
    needs: [ lint, test, build ]
    steps:
      - uses: actions/checkout@v2
      - name: Get artifact
        uses: actions/download-artifact@v2
        with:
          name: create-react-app-build
          path: build
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          expires: 7d
          projectId: staging-clockwork